State 15 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: program assignment ';'
    2        | program declaration ';'
    3        | program PRINT expr ';'
    4        | program ctrlstmt ';'
    5        | /* empty */

    6 ctrlstmt: IF '(' boolexpr ')' '{' program '}'
    7         | WHILE '(' boolexpr ')' '{' program '}'

    8 expr: numexpr
    9     | boolexpr

   10 numexpr: '(' numexpr ')'
   11        | numexpr '+' numexpr
   12        | numexpr '-' numexpr
   13        | numexpr '*' numexpr
   14        | numexpr '/' numexpr
   15        | DOUBLEVAL
   16        | INTEGERVAL
   17        | VARNAME

   18 boolexpr: '(' boolexpr ')'
   19         | numexpr GT numexpr
   20         | numexpr LT numexpr
   21         | numexpr GTOE numexpr
   22         | numexpr LTOE numexpr
   23         | numexpr EQUAL numexpr
   24         | boolexpr AND boolexpr
   25         | boolexpr OR boolexpr
   26         | NOT boolexpr
   27         | BOOLVAL
   28         | VARNAME

   29 declaration: INT VARNAME
   30            | DOUBLE VARNAME
   31            | BOOLEAN VARNAME

   32 assignment: INT VARNAME '=' numexpr
   33           | DOUBLE VARNAME '=' numexpr
   34           | BOOLEAN VARNAME '=' boolexpr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 7 10 18
')' (41) 6 7 10 18
'*' (42) 13
'+' (43) 11
'-' (45) 12
'/' (47) 14
';' (59) 1 2 3 4
'=' (61) 32 33 34
'{' (123) 6 7
'}' (125) 6 7
error (256)
INT (258) 29 32
DOUBLE (259) 30 33
BOOLEAN (260) 31 34
PRINT (261) 3
AND (262) 24
OR (263) 25
GTOE (264) 21
LTOE (265) 22
GT (266) 19
LT (267) 20
EQUAL (268) 23
IF (269) 6
WHILE (270) 7
VARNAME (271) 17 28 29 30 31 32 33 34
DOUBLEVAL (272) 15
INTEGERVAL (273) 16
BOOLVAL (274) 27
NOT (275) 26


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
program (32)
    on left: 1 2 3 4 5, on right: 0 1 2 3 4 6 7
ctrlstmt (33)
    on left: 6 7, on right: 4
expr (34)
    on left: 8 9, on right: 3
numexpr (35)
    on left: 10 11 12 13 14 15 16 17, on right: 8 10 11 12 13 14 19
    20 21 22 23 32 33
boolexpr (36)
    on left: 18 19 20 21 22 23 24 25 26 27 28, on right: 6 7 9 18 24
    25 26 34
declaration (37)
    on left: 29 30 31, on right: 2
assignment (38)
    on left: 32 33 34, on right: 1


state 0

    0 $accept: . program $end

    $default  reduce using rule 5 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    1 program: program . assignment ';'
    2        | program . declaration ';'
    3        | program . PRINT expr ';'
    4        | program . ctrlstmt ';'

    $end     shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    PRINT    shift, and go to state 6
    IF       shift, and go to state 7
    WHILE    shift, and go to state 8

    ctrlstmt     go to state 9
    declaration  go to state 10
    assignment   go to state 11


state 2

    0 $accept: program $end .

    $default  accept


state 3

   29 declaration: INT . VARNAME
   32 assignment: INT . VARNAME '=' numexpr

    VARNAME  shift, and go to state 12


state 4

   30 declaration: DOUBLE . VARNAME
   33 assignment: DOUBLE . VARNAME '=' numexpr

    VARNAME  shift, and go to state 13


state 5

   31 declaration: BOOLEAN . VARNAME
   34 assignment: BOOLEAN . VARNAME '=' boolexpr

    VARNAME  shift, and go to state 14


state 6

    3 program: program PRINT . expr ';'

    VARNAME     shift, and go to state 15
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    BOOLVAL     shift, and go to state 18
    '('         shift, and go to state 19
    NOT         shift, and go to state 20

    expr      go to state 21
    numexpr   go to state 22
    boolexpr  go to state 23


state 7

    6 ctrlstmt: IF . '(' boolexpr ')' '{' program '}'

    '('  shift, and go to state 24


state 8

    7 ctrlstmt: WHILE . '(' boolexpr ')' '{' program '}'

    '('  shift, and go to state 25


state 9

    4 program: program ctrlstmt . ';'

    ';'  shift, and go to state 26


state 10

    2 program: program declaration . ';'

    ';'  shift, and go to state 27


state 11

    1 program: program assignment . ';'

    ';'  shift, and go to state 28


state 12

   29 declaration: INT VARNAME .
   32 assignment: INT VARNAME . '=' numexpr

    '='  shift, and go to state 29

    $default  reduce using rule 29 (declaration)


state 13

   30 declaration: DOUBLE VARNAME .
   33 assignment: DOUBLE VARNAME . '=' numexpr

    '='  shift, and go to state 30

    $default  reduce using rule 30 (declaration)


state 14

   31 declaration: BOOLEAN VARNAME .
   34 assignment: BOOLEAN VARNAME . '=' boolexpr

    '='  shift, and go to state 31

    $default  reduce using rule 31 (declaration)


state 15

   17 numexpr: VARNAME .
   28 boolexpr: VARNAME .

    AND       reduce using rule 28 (boolexpr)
    OR        reduce using rule 28 (boolexpr)
    ')'       reduce using rule 17 (numexpr)
    ')'       [reduce using rule 28 (boolexpr)]
    ';'       reduce using rule 17 (numexpr)
    ';'       [reduce using rule 28 (boolexpr)]
    $default  reduce using rule 17 (numexpr)


state 16

   15 numexpr: DOUBLEVAL .

    $default  reduce using rule 15 (numexpr)


state 17

   16 numexpr: INTEGERVAL .

    $default  reduce using rule 16 (numexpr)


state 18

   27 boolexpr: BOOLVAL .

    $default  reduce using rule 27 (boolexpr)


state 19

   10 numexpr: '(' . numexpr ')'
   18 boolexpr: '(' . boolexpr ')'

    VARNAME     shift, and go to state 15
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    BOOLVAL     shift, and go to state 18
    '('         shift, and go to state 19
    NOT         shift, and go to state 20

    numexpr   go to state 32
    boolexpr  go to state 33


state 20

   26 boolexpr: NOT . boolexpr

    VARNAME     shift, and go to state 15
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    BOOLVAL     shift, and go to state 18
    '('         shift, and go to state 19
    NOT         shift, and go to state 20

    numexpr   go to state 34
    boolexpr  go to state 35


state 21

    3 program: program PRINT expr . ';'

    ';'  shift, and go to state 36


state 22

    8 expr: numexpr .
   11 numexpr: numexpr . '+' numexpr
   12        | numexpr . '-' numexpr
   13        | numexpr . '*' numexpr
   14        | numexpr . '/' numexpr
   19 boolexpr: numexpr . GT numexpr
   20         | numexpr . LT numexpr
   21         | numexpr . GTOE numexpr
   22         | numexpr . LTOE numexpr
   23         | numexpr . EQUAL numexpr

    GTOE   shift, and go to state 37
    LTOE   shift, and go to state 38
    GT     shift, and go to state 39
    LT     shift, and go to state 40
    EQUAL  shift, and go to state 41
    '+'    shift, and go to state 42
    '-'    shift, and go to state 43
    '*'    shift, and go to state 44
    '/'    shift, and go to state 45

    $default  reduce using rule 8 (expr)


state 23

    9 expr: boolexpr .
   24 boolexpr: boolexpr . AND boolexpr
   25         | boolexpr . OR boolexpr

    AND  shift, and go to state 46
    OR   shift, and go to state 47

    $default  reduce using rule 9 (expr)


state 24

    6 ctrlstmt: IF '(' . boolexpr ')' '{' program '}'

    VARNAME     shift, and go to state 15
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    BOOLVAL     shift, and go to state 18
    '('         shift, and go to state 19
    NOT         shift, and go to state 20

    numexpr   go to state 34
    boolexpr  go to state 48


state 25

    7 ctrlstmt: WHILE '(' . boolexpr ')' '{' program '}'

    VARNAME     shift, and go to state 15
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    BOOLVAL     shift, and go to state 18
    '('         shift, and go to state 19
    NOT         shift, and go to state 20

    numexpr   go to state 34
    boolexpr  go to state 49


state 26

    4 program: program ctrlstmt ';' .

    $default  reduce using rule 4 (program)


state 27

    2 program: program declaration ';' .

    $default  reduce using rule 2 (program)


state 28

    1 program: program assignment ';' .

    $default  reduce using rule 1 (program)


state 29

   32 assignment: INT VARNAME '=' . numexpr

    VARNAME     shift, and go to state 50
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    '('         shift, and go to state 51

    numexpr  go to state 52


state 30

   33 assignment: DOUBLE VARNAME '=' . numexpr

    VARNAME     shift, and go to state 50
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    '('         shift, and go to state 51

    numexpr  go to state 53


state 31

   34 assignment: BOOLEAN VARNAME '=' . boolexpr

    VARNAME     shift, and go to state 15
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    BOOLVAL     shift, and go to state 18
    '('         shift, and go to state 19
    NOT         shift, and go to state 20

    numexpr   go to state 34
    boolexpr  go to state 54


state 32

   10 numexpr: '(' numexpr . ')'
   11        | numexpr . '+' numexpr
   12        | numexpr . '-' numexpr
   13        | numexpr . '*' numexpr
   14        | numexpr . '/' numexpr
   19 boolexpr: numexpr . GT numexpr
   20         | numexpr . LT numexpr
   21         | numexpr . GTOE numexpr
   22         | numexpr . LTOE numexpr
   23         | numexpr . EQUAL numexpr

    GTOE   shift, and go to state 37
    LTOE   shift, and go to state 38
    GT     shift, and go to state 39
    LT     shift, and go to state 40
    EQUAL  shift, and go to state 41
    ')'    shift, and go to state 55
    '+'    shift, and go to state 42
    '-'    shift, and go to state 43
    '*'    shift, and go to state 44
    '/'    shift, and go to state 45


state 33

   18 boolexpr: '(' boolexpr . ')'
   24         | boolexpr . AND boolexpr
   25         | boolexpr . OR boolexpr

    AND  shift, and go to state 46
    OR   shift, and go to state 47
    ')'  shift, and go to state 56


state 34

   11 numexpr: numexpr . '+' numexpr
   12        | numexpr . '-' numexpr
   13        | numexpr . '*' numexpr
   14        | numexpr . '/' numexpr
   19 boolexpr: numexpr . GT numexpr
   20         | numexpr . LT numexpr
   21         | numexpr . GTOE numexpr
   22         | numexpr . LTOE numexpr
   23         | numexpr . EQUAL numexpr

    GTOE   shift, and go to state 37
    LTOE   shift, and go to state 38
    GT     shift, and go to state 39
    LT     shift, and go to state 40
    EQUAL  shift, and go to state 41
    '+'    shift, and go to state 42
    '-'    shift, and go to state 43
    '*'    shift, and go to state 44
    '/'    shift, and go to state 45


state 35

   24 boolexpr: boolexpr . AND boolexpr
   25         | boolexpr . OR boolexpr
   26         | NOT boolexpr .

    $default  reduce using rule 26 (boolexpr)


state 36

    3 program: program PRINT expr ';' .

    $default  reduce using rule 3 (program)


state 37

   21 boolexpr: numexpr GTOE . numexpr

    VARNAME     shift, and go to state 50
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    '('         shift, and go to state 51

    numexpr  go to state 57


state 38

   22 boolexpr: numexpr LTOE . numexpr

    VARNAME     shift, and go to state 50
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    '('         shift, and go to state 51

    numexpr  go to state 58


state 39

   19 boolexpr: numexpr GT . numexpr

    VARNAME     shift, and go to state 50
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    '('         shift, and go to state 51

    numexpr  go to state 59


state 40

   20 boolexpr: numexpr LT . numexpr

    VARNAME     shift, and go to state 50
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    '('         shift, and go to state 51

    numexpr  go to state 60


state 41

   23 boolexpr: numexpr EQUAL . numexpr

    VARNAME     shift, and go to state 50
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    '('         shift, and go to state 51

    numexpr  go to state 61


state 42

   11 numexpr: numexpr '+' . numexpr

    VARNAME     shift, and go to state 50
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    '('         shift, and go to state 51

    numexpr  go to state 62


state 43

   12 numexpr: numexpr '-' . numexpr

    VARNAME     shift, and go to state 50
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    '('         shift, and go to state 51

    numexpr  go to state 63


state 44

   13 numexpr: numexpr '*' . numexpr

    VARNAME     shift, and go to state 50
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    '('         shift, and go to state 51

    numexpr  go to state 64


state 45

   14 numexpr: numexpr '/' . numexpr

    VARNAME     shift, and go to state 50
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    '('         shift, and go to state 51

    numexpr  go to state 65


state 46

   24 boolexpr: boolexpr AND . boolexpr

    VARNAME     shift, and go to state 15
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    BOOLVAL     shift, and go to state 18
    '('         shift, and go to state 19
    NOT         shift, and go to state 20

    numexpr   go to state 34
    boolexpr  go to state 66


state 47

   25 boolexpr: boolexpr OR . boolexpr

    VARNAME     shift, and go to state 15
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    BOOLVAL     shift, and go to state 18
    '('         shift, and go to state 19
    NOT         shift, and go to state 20

    numexpr   go to state 34
    boolexpr  go to state 67


state 48

    6 ctrlstmt: IF '(' boolexpr . ')' '{' program '}'
   24 boolexpr: boolexpr . AND boolexpr
   25         | boolexpr . OR boolexpr

    AND  shift, and go to state 46
    OR   shift, and go to state 47
    ')'  shift, and go to state 68


state 49

    7 ctrlstmt: WHILE '(' boolexpr . ')' '{' program '}'
   24 boolexpr: boolexpr . AND boolexpr
   25         | boolexpr . OR boolexpr

    AND  shift, and go to state 46
    OR   shift, and go to state 47
    ')'  shift, and go to state 69


state 50

   17 numexpr: VARNAME .

    $default  reduce using rule 17 (numexpr)


state 51

   10 numexpr: '(' . numexpr ')'

    VARNAME     shift, and go to state 50
    DOUBLEVAL   shift, and go to state 16
    INTEGERVAL  shift, and go to state 17
    '('         shift, and go to state 51

    numexpr  go to state 70


state 52

   11 numexpr: numexpr . '+' numexpr
   12        | numexpr . '-' numexpr
   13        | numexpr . '*' numexpr
   14        | numexpr . '/' numexpr
   32 assignment: INT VARNAME '=' numexpr .

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 32 (assignment)


state 53

   11 numexpr: numexpr . '+' numexpr
   12        | numexpr . '-' numexpr
   13        | numexpr . '*' numexpr
   14        | numexpr . '/' numexpr
   33 assignment: DOUBLE VARNAME '=' numexpr .

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 33 (assignment)


state 54

   24 boolexpr: boolexpr . AND boolexpr
   25         | boolexpr . OR boolexpr
   34 assignment: BOOLEAN VARNAME '=' boolexpr .

    AND  shift, and go to state 46
    OR   shift, and go to state 47

    $default  reduce using rule 34 (assignment)


state 55

   10 numexpr: '(' numexpr ')' .

    $default  reduce using rule 10 (numexpr)


state 56

   18 boolexpr: '(' boolexpr ')' .

    $default  reduce using rule 18 (boolexpr)


state 57

   11 numexpr: numexpr . '+' numexpr
   12        | numexpr . '-' numexpr
   13        | numexpr . '*' numexpr
   14        | numexpr . '/' numexpr
   21 boolexpr: numexpr GTOE numexpr .

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 21 (boolexpr)


state 58

   11 numexpr: numexpr . '+' numexpr
   12        | numexpr . '-' numexpr
   13        | numexpr . '*' numexpr
   14        | numexpr . '/' numexpr
   22 boolexpr: numexpr LTOE numexpr .

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 22 (boolexpr)


state 59

   11 numexpr: numexpr . '+' numexpr
   12        | numexpr . '-' numexpr
   13        | numexpr . '*' numexpr
   14        | numexpr . '/' numexpr
   19 boolexpr: numexpr GT numexpr .

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 19 (boolexpr)


state 60

   11 numexpr: numexpr . '+' numexpr
   12        | numexpr . '-' numexpr
   13        | numexpr . '*' numexpr
   14        | numexpr . '/' numexpr
   20 boolexpr: numexpr LT numexpr .

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 20 (boolexpr)


state 61

   11 numexpr: numexpr . '+' numexpr
   12        | numexpr . '-' numexpr
   13        | numexpr . '*' numexpr
   14        | numexpr . '/' numexpr
   23 boolexpr: numexpr EQUAL numexpr .

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 23 (boolexpr)


state 62

   11 numexpr: numexpr . '+' numexpr
   11        | numexpr '+' numexpr .
   12        | numexpr . '-' numexpr
   13        | numexpr . '*' numexpr
   14        | numexpr . '/' numexpr

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 11 (numexpr)


state 63

   11 numexpr: numexpr . '+' numexpr
   12        | numexpr . '-' numexpr
   12        | numexpr '-' numexpr .
   13        | numexpr . '*' numexpr
   14        | numexpr . '/' numexpr

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 12 (numexpr)


state 64

   11 numexpr: numexpr . '+' numexpr
   12        | numexpr . '-' numexpr
   13        | numexpr . '*' numexpr
   13        | numexpr '*' numexpr .
   14        | numexpr . '/' numexpr

    $default  reduce using rule 13 (numexpr)


state 65

   11 numexpr: numexpr . '+' numexpr
   12        | numexpr . '-' numexpr
   13        | numexpr . '*' numexpr
   14        | numexpr . '/' numexpr
   14        | numexpr '/' numexpr .

    $default  reduce using rule 14 (numexpr)


state 66

   24 boolexpr: boolexpr . AND boolexpr
   24         | boolexpr AND boolexpr .
   25         | boolexpr . OR boolexpr

    $default  reduce using rule 24 (boolexpr)


state 67

   24 boolexpr: boolexpr . AND boolexpr
   25         | boolexpr . OR boolexpr
   25         | boolexpr OR boolexpr .

    $default  reduce using rule 25 (boolexpr)


state 68

    6 ctrlstmt: IF '(' boolexpr ')' . '{' program '}'

    '{'  shift, and go to state 71


state 69

    7 ctrlstmt: WHILE '(' boolexpr ')' . '{' program '}'

    '{'  shift, and go to state 72


state 70

   10 numexpr: '(' numexpr . ')'
   11        | numexpr . '+' numexpr
   12        | numexpr . '-' numexpr
   13        | numexpr . '*' numexpr
   14        | numexpr . '/' numexpr

    ')'  shift, and go to state 55
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45


state 71

    6 ctrlstmt: IF '(' boolexpr ')' '{' . program '}'

    $default  reduce using rule 5 (program)

    program  go to state 73


state 72

    7 ctrlstmt: WHILE '(' boolexpr ')' '{' . program '}'

    $default  reduce using rule 5 (program)

    program  go to state 74


state 73

    1 program: program . assignment ';'
    2        | program . declaration ';'
    3        | program . PRINT expr ';'
    4        | program . ctrlstmt ';'
    6 ctrlstmt: IF '(' boolexpr ')' '{' program . '}'

    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    PRINT    shift, and go to state 6
    IF       shift, and go to state 7
    WHILE    shift, and go to state 8
    '}'      shift, and go to state 75

    ctrlstmt     go to state 9
    declaration  go to state 10
    assignment   go to state 11


state 74

    1 program: program . assignment ';'
    2        | program . declaration ';'
    3        | program . PRINT expr ';'
    4        | program . ctrlstmt ';'
    7 ctrlstmt: WHILE '(' boolexpr ')' '{' program . '}'

    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    PRINT    shift, and go to state 6
    IF       shift, and go to state 7
    WHILE    shift, and go to state 8
    '}'      shift, and go to state 76

    ctrlstmt     go to state 9
    declaration  go to state 10
    assignment   go to state 11


state 75

    6 ctrlstmt: IF '(' boolexpr ')' '{' program '}' .

    $default  reduce using rule 6 (ctrlstmt)


state 76

    7 ctrlstmt: WHILE '(' boolexpr ')' '{' program '}' .

    $default  reduce using rule 7 (ctrlstmt)
